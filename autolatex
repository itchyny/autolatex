#!/bin/sh
# Filename: autolatex
# Author: itchyny
# License: MIT License
# Last Change: 2014/05/13 18:47:19.

# Usage: autolatex test.tex
if [ $# -ne 1 ]; then
  echo 'no argument'
  exit 1
fi

# Source file
source=$(basename "$1")
dirname=$(dirname "$1")

# Change the working directory
cd "$dirname"

# Basename of the output files
output=${source%%.*}

# You can omit the file extension
if ! [ -f "$source" ] && [ "$source" = "$output" ]; then
  source=$source.tex
  if ! [ -f "$source" ]; then
    echo "$source not found"
    exit 1
  fi
fi

# Output pdf
outputpdf=$output.pdf

# Temporary file
filename=_$output

# If you write a comment "% filename test", it reads that line and set as the filename.
if cat "$source" | grep '^% *filename ' > /dev/null; then
  filename=`cat "$source" | grep '^% *filename ' |\
    sed 's/% *filename *//' |\
    tr -d '[\r\n]' `
  outputpdf=$filename.pdf
  if [ "$output" = "$filename" ]; then
    filename=_$filename
  fi
fi

# BibTeX
# You can use jbibtex if you wish with a comment: % jbibtex
if command -v jbibtex >/dev/null 2>&1 && cat "$source" | grep '^% *jbibtex *$' > /dev/null; then
  bibtex=jbibtex
else
  bibtex=bibtex
fi

if ls *.bib > /dev/null 2>&1 && [ -f "$filename.aux" ]; then
  if cat "$source" | grep '\\bibliography' > /dev/null; then
    $bibtex "$filename.aux"
    if [ -f "$filename.aux.bbl" ]; then
      sed -i.bak -e '/%$/N;s/%\n//' "$filename.aux.bbl"
      mv "$filename.aux.bbl" "$filename.bbl"
    else
      sed -i.bak -e '/%$/N;s/%\n//' "$filename.bbl"
    fi
  fi
fi

# Borrow document class from existing files in the directory
if cat *.tex 2>/dev/null | grep '^\\documentclass' > /dev/null; then
  documentclass=$(cat *.tex | grep '^\\documentclass' | head -n 1)
else
  documentclass='\documentclass[a4paper,11pt]{article}'
fi

# If there is \bye command, use tex instead of platex
usepdflatex=0
if cat "$source" | grep '% *pdflatex' > /dev/null; then
  uselatex=1
  usepdflatex=1
  tex=pdflatex
elif cat "$source" | grep '\\bye' > /dev/null; then
  uselatex=0
  tex=tex
elif cat "$source" | grep '{\(abc\)}' > /dev/null; then
  uselatex=1
  usepdflatex=1
  tex=pdflatex
elif cat "$source" | grep '{\(article\|revtex\)}' > /dev/null; then
  uselatex=1
  tex=latex
else
  uselatex=1
  tex=platex
fi

# If xy-pic is used, we have to compile through postscript
if cat "$source" | grep '^% *nops' > /dev/null; then
  useps=0
elif cat "$source" | grep '\({xy}\|Qcircuit\|^% *useps\)' > /dev/null; then
  useps=1
else
  useps=0
fi

# Check if the argument file is a piece of a document.
if [ $uselatex -eq 1 ] && ! cat "$source" | grep 'documentclass' > /dev/null; then
  echo " $documentclass" > "$filename.tex"
  mainfile=0
  for file in *tex
  do
    if cat "$file" | grep '^\\documentclass' > /dev/null; then
      mainfile=1
      break;
    fi
  done
  if [ $mainfile -eq 1 ]; then
    cat "$file" | LC_ALL=C sed 's/^\\documentclass/% \\documentclass/' |\
      LC_ALL=C sed '/\\begin{document}/,$d' >> "$filename.tex"
  else
    if cat "$source" | grep 'align' > /dev/null; then
      echo '\\usepackage{amssymb,amsmath}' >> "$filename.tex"
    fi
    if cat "$source" | grep '\\bm' > /dev/null; then
      echo '\\usepackage{bm}' >> "$filename.tex"
    fi
    if cat "$source" | grep '\\includegraphics' > /dev/null; then
      echo '\\usepackage[dvipdfm]{graphicx}' >> "$filename.tex"
    fi
  fi
  echo '\\begin{document}' >> "$filename.tex"
  enddocument='\end{document}'
else
  echo '' > "$filename.tex"
  enddocument=''
fi

# Check options (example: % dvipdfmx -f dlbase14.map)
if cat "$source" | grep '^% *dvipdfmx ' > /dev/null; then
  dvipdfmx_opt=`cat "$source" |\
    grep '^% *dvipdfmx ' |\
    sed 's/% *dvipdfmx//' |\
    tr -d '\r'`
else
  dvipdfmx_opt=''
fi
tex_opt=''
if cat "$source" | grep '^% *\(p\(df\)\?la\)\?tex ' > /dev/null; then
  tex_opt=`cat "$source" |\
    grep '^% *\(p\(df\)\?la\)\?tex ' |\
    sed 's/% *\(p\(df\)*la\)*tex//' |\
    tr -d '\r'`
elif cat "$source" | grep '{\(abc\)}' > /dev/null; then
  tex_opt='--shell-escape'
fi

# Pdf viewer
if [ `uname` = 'Darwin' ]; then
  pdfviewer="open -a Preview"
elif command -v gnome-open >/dev/null 2>&1; then
  pdfviewer="gnome-open"
elif command -v xdg-open >/dev/null 2>&1; then
  pdfviewer="xdg-open"
elif command -v exo-open >/dev/null 2>&1; then
  pdfviewer="exo-open"
elif command -v evince >/dev/null 2>&1; then
  pdfviewer="evince"
elif command -v gpdf >/dev/null 2>&1; then
  pdfviewer="gpdf"
elif command -v kpdf >/dev/null 2>&1; then
  pdfviewer="kpdf"
fi

# Check if platex supports utf8
if platex -v | head -n 1 | grep "(utf8" > /dev/null; then
  utf8=1
else
  utf8=0
fi

# Check the encoding of the source file
if [ "$(uname)" == "Darwin" ]; then
  encoding="file --mime"
else
  encoding="file -bi"
fi
if $encoding "$source" | grep "utf-8\|us-ascii" > /dev/null; then
  sourceutf8=1
else
  sourceutf8=0
fi

# TeX process
if [ $useps -eq 1 ]; then
  texprocess="$tex $tex_opt \"$filename.tex\" && dvips \"$filename.dvi\" && ps2pdf \"$filename.ps\""
elif [ $usepdflatex -eq 1 ]; then
  texprocess="$tex $tex_opt \"$filename.tex\""
else
  texprocess="$tex $tex_opt \"$filename.tex\" && dvipdfmx $dvipdfmx_opt \"$filename.dvi\""
fi

# Create the tex file
if [ $utf8 -eq $sourceutf8 ]; then
  cat "$source" | sed 's/^\(\\documentclass\)/ \1/' >> "$filename.tex"
  echo $enddocument >> "$filename.tex"
else
  # nkf -e "$source" >> ."$filename.tex"
  IFS=$'\n'
  if platex -v | head -n 1 | grep "(utf8" > /dev/null; then
    nkfopt=-w
  elif platex -v | head -n 1 | grep "(sjis" > /dev/null; then
    nkfopt=-e
  else
    nkfopt=-s
  fi
  cat "$source" | LC_ALL=C sed 's/\\/\\\\/g' | while read -r line; do
    if echo $line | grep '^\\input ' > /dev/null; then
      inputfilename=$(echo $line | LC_ALL=C sed 's/\\input *//')
      cat "$inputfilename" | LC_ALL=C sed 's/\\/\\\\/g' | while read -r linee; do
        if echo $linee | grep '^\\input ' > /dev/null; then
          inputfilename=$(echo $linee | LC_ALL=C sed 's/\\input *//')
          cat "$inputfilename" | nkf $nkfopt >> "$filename.tex"
        else
          echo $linee | nkf $nkfopt >> "$filename.tex"
        fi
      done
    else
      echo $line | nkf $nkfopt >> "$filename.tex"
    fi
  done
  echo $enddocument >> "$filename.tex"
fi

# Main process
if eval $texprocess; then
  if [ "$filename.pdf" != "$outputpdf" ]; then
    mv "$filename.pdf" "$outputpdf"
  fi
  eval "$pdfviewer \"$outputpdf\"" &
fi

# Post process
rm -f "$filename.tex" "$filename.log" "$filename.dvi" "$filename.blg" "$filename.aux.blg" "$filename.bbl.bak" "$filename.aux.bbl.bak"
# If you write a comment "% rm aux toc", read that line and remove files.
if cat "$source" | grep '^% *rm ' > /dev/null; then
  files=`cat "$source" |\
    grep '^% *rm ' |\
    sed 's/% *rm//' |\
    sed 's/\([ ,]\)\([^ ,][^ ,]*\)/ '$filename'.\2/g' |\
    tr '[\r,]' ' ' `
  rm $files
fi
